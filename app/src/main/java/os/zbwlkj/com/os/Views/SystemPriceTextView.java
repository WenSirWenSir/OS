package os.zbwlkj.com.os.Views;import android.annotation.SuppressLint;import android.content.Context;import android.graphics.Typeface;import android.os.Handler;import android.os.Message;import android.util.AttributeSet;import android.util.Log;import android.widget.TextView;@SuppressLint("AppCompatCustomView")public class SystemPriceTextView extends TextView implements Runnable {    private static final String MSG = "SystemIntegerView.java[+]";    private static final int changeCount = 80;    private int textColor = 0xf30d88;    private float startValue = 0.00f;    private float startAverage = 0.00f;    private int count = 0;    @SuppressLint("HandlerLeak")    private Handler handler = new Handler() {        @SuppressLint("LongLogTag")        @Override        public void handleMessage(Message msg) {            super.handleMessage(msg);            if (msg != null) {                Log.i(MSG, "数值为:" + msg.obj);                setText(String.format("%.2f", msg.obj));            }        }    };    public SystemPriceTextView(Context context, AttributeSet attrs, int defStyleAttr) {        super(context, attrs, defStyleAttr);        Typeface typeface = Typeface.createFromAsset(getContext().getAssets(), "font/comicbd" +                "" + ".ttf");        setTypeface(typeface);    }    public SystemPriceTextView(Context context, AttributeSet attrs) {        super(context, attrs);        Typeface typeface = Typeface.createFromAsset(getContext().getAssets(), "font/comicbd" +                "" + ".ttf");        setTypeface(typeface);    }    public SystemPriceTextView(Context context) {        super(context);        Typeface typeface = Typeface.createFromAsset(getContext().getAssets(), "font/comicbd" +                "" + ".ttf");        setTypeface(typeface);    }    public void setValues(float _values) {        startAverage = _values / changeCount;    }    public double getValues() {        return startValue;    }    public void ClearValue() {        this.startValue = 0.00f;    }    @SuppressLint("LongLogTag")    @Override    public void run() {        Log.e(MSG, "开始起跑");        while (count < changeCount) {            count++;            startValue += startAverage;            Log.e(MSG, "startValue:" + startValue);            Message msg = new Message();            msg.obj = startValue;            handler.sendMessage(msg);            try {                Thread.sleep(5);            } catch (Exception e) {                Log.e(MSG, "动态的数字增加的错误信息:" + e.getMessage());            }        }    }}