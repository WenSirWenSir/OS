package os.zbwlkj.com.os.Act;import android.animation.ObjectAnimator;import android.animation.ValueAnimator;import android.graphics.Color;import android.os.Bundle;import android.os.PersistableBundle;import android.support.v4.app.Fragment;import android.support.v4.app.FragmentManager;import android.support.v4.app.FragmentTransaction;import android.util.Log;import android.view.View;import android.view.ViewGroup;import android.view.Window;import android.widget.TextView;import java.util.ArrayList;import java.util.List;import os.zbwlkj.com.os.Class.ShockInterpolator;import os.zbwlkj.com.os.Class.action_class;import os.zbwlkj.com.os.Class.fragment_class;import os.zbwlkj.com.os.Fragment.Me;import os.zbwlkj.com.os.Fragment.Shop;import os.zbwlkj.com.os.R;import os.zbwlkj.com.os.Utils.TextUnt;import os.zbwlkj.com.os.Utils.Utils;import os.zbwlkj.com.os.Utils.animatorFactor;/** * 展示商品/票跟/干货/生鲜/水果/饮料/牛奶/零食的界面 * 用来驱动Fragment的管理器 */public class Act_showMain extends fragment_class {    private String MSG = "Act_showMain.java[+]";    private TextView btn_pay;    private int action = 0;/*表示是商品*/    private FragmentManager fragmentManager;    private static final String CURRENT_FRAGMENT = "CURRENT_FRAGMENT";/*标识内存重启的保存值*/    private Fragment CurrentFragment = new Fragment();/*当前显示的Fragment*/    private List<Fragment> FragmentList = new ArrayList<>();    private int CurrentFragmentPosition = 0;/*显示的Fragment的游标*/    @Override    protected void onCreate(Bundle savedInstanceState) {        getWindow().requestFeature(Window.FEATURE_CONTENT_TRANSITIONS);        setTransparentBar();        setInTransition(action_class.TRANSITION.SLIDE);/*设置进入动画 */        setOutTransition(action_class.TRANSITION.EXPLODE);/*设置退出动画*/        setContentView(R.layout.act_showmain);        super.onCreate(savedInstanceState);        fragmentManager = getSupportFragmentManager();        /*判断是否内存重启*/        if (savedInstanceState != null) {            Log.i(MSG, "saveInstanceState不为NULL");        } else {            Log.i(MSG, "saveInstanceState为NULL");            switch (action) {                case action_class.SHOW_MAIN_TYPE.SHOP:                    FragmentList.add(new Shop());                    break;            }            FragmentList.add(new Me());            toShowFrg();        }        init();    }    /**     * 展示界面     */    private void toShowFrg() {        try {            FragmentTransaction transaction = fragmentManager.beginTransaction();            //如果之前没有添加过            if (!FragmentList.get(CurrentFragmentPosition).isAdded()) {                transaction.hide(CurrentFragment).add(R.id.act_showmain_framelayout, FragmentList                        .get(CurrentFragmentPosition), "" + CurrentFragmentPosition);                //第三个参数为添加当前的fragment时绑定一个tag            } else {                transaction.hide(CurrentFragment).show(FragmentList.get(CurrentFragmentPosition));            }            CurrentFragment = FragmentList.get(CurrentFragmentPosition);            transaction.commit();        } catch (Exception e) {        }    }    /**     * 系统初始化     */    private void init() {        /**         * 获取屏幕高度和宽度  用来获取一张正确的海报         */        int MetricHeight = getHeightPixels();        switch (action) {            case action_class.SHOW_MAIN_TYPE.SHOP:                /*展示的是商品的界面*/                break;        }        ValueAnimator valueAnimator = ValueAnimator.ofInt(0, 250);        btn_pay = findViewById(R.id.act_showmain_btnPay);        valueAnimator.setDuration(1500);        valueAnimator.setInterpolator(new ShockInterpolator());        valueAnimator.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {            @Override            public void onAnimationUpdate(ValueAnimator animation) {                ViewGroup.LayoutParams layoutParams = btn_pay.getLayoutParams();                layoutParams.width = (int) animation.getAnimatedValue();                btn_pay.setLayoutParams(layoutParams);            }        });        valueAnimator.start();        TextUnt.with(this, R.id.act_showmain_btnPay).setBackground(Utils.CreateDrawable                (getApplicationContext(), 1, R.color.color_accent, R.color.color_accent, 10));        listener();    }    /**     * 初始化监听事件     */    private void listener() {        /**         * 退出监听         */        setOnbackListener(R.id.act_showmain_btnBack, false);        /*初始化界面  设置导航的字号*/        TextUnt.with(this, R.id.act_showmain_btnHome).setTextSize(18).setOnClick(new View                .OnClickListener() {            @Override            public void onClick(View v) {                TextUnt.with(Act_showMain.this, R.id.act_showmain_btnHome).setTextSize(18)                        .setTextColor(Color.WHITE);                TextUnt.with(Act_showMain.this, R.id.act_showmain_btnMe).setTextSize(17)                        .setTextColor("#bfbfbf");                CurrentFragmentPosition = 0;                toShowFrg();            }        });        /**         * 点击Me的监听事件         */        TextUnt.with(this, R.id.act_showmain_btnMe).setOnClick(new View.OnClickListener() {            @Override            public void onClick(View v) {                TextUnt.with(Act_showMain.this, R.id.act_showmain_btnMe).setTextSize(18)                        .setTextColor(Color.WHITE);                TextUnt.with(Act_showMain.this, R.id.act_showmain_btnHome).setTextSize(17)                        .setTextColor("#bfbfbf");                CurrentFragmentPosition = 1;                toShowFrg();            }        });        /**         * 点击购买的按钮的事件         */        TextUnt.with(this, R.id.act_showmain_btnPay).setOnClick(new View.OnClickListener() {            @Override            public void onClick(View v) {                animatorFactor.ButtonValuesanimator buttonValuesanimator = animatorFactor                        .getButtonValuesanimator();            }        });        btn_pay.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                /**                 * 设置一个属性动画 用来隐藏Pay的按钮                 */                ObjectAnimator animator = ObjectAnimator.ofFloat(v, "alpha", 1.0f, 0.0f);                animator.start();            }        });    }    @Override    public void onSaveInstanceState(Bundle outState, PersistableBundle outPersistentState) {        outState.putInt(CURRENT_FRAGMENT, CurrentFragmentPosition);        super.onSaveInstanceState(outState);    }}