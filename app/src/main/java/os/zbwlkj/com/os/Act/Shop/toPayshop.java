package os.zbwlkj.com.os.Act.Shop;import android.annotation.SuppressLint;import android.os.Bundle;import android.transition.Visibility;import android.view.Gravity;import android.view.LayoutInflater;import android.view.View;import android.widget.ImageView;import android.widget.LinearLayout;import android.widget.Toast;import java.util.ArrayList;import java.util.List;import os.zbwlkj.com.os.Class.act_class;import os.zbwlkj.com.os.R;import os.zbwlkj.com.os.Utils.TextUnt;import os.zbwlkj.com.os.Utils.Utils;public class toPayshop extends act_class {    private LinearLayout ll_msgboy;    private Boolean bl_isfirst = true;    private List<View> ar_showpages = new ArrayList<>();/*展示的BODY的集合*/    private int show_position;    /**     * 展示的TAG     */    private final int SHOW_MSG_BODY = 0;/*展示商品的信息*/    private final int SHOW_MSG_PAY = 1;/*选择商品的支付方式*/    private final int SHOW_MSG_RESULT = 2;/*选择商品的支付结果*/    @Override    protected void onCreate(Bundle savedInstanceState) {        setStatusBar("#efefef");        setInTransitionWithSlide(500, Visibility.MODE_IN, Gravity.LEFT);        setOutTransitionWithSlide(500, Visibility.MODE_OUT, Gravity.RIGHT);        setContentView(R.layout.act_topayshop);        ll_msgboy = findViewById(R.id.act_topayMsgBody);/*展示信息的body*/        /*初始化 加载模板*/        ar_showpages.add(LayoutInflater.from(getApplicationContext()).inflate(R.layout                .assembly_item_topayshop, null, false));        init();        super.onCreate(savedInstanceState);    }    /**     * 初始化     */    private void init() {        if (bl_isfirst) {            bl_isfirst = false;            /*默认第一次 就显示商品的基础信息*/            show_position = 0;            showPages();        }    }    /**     * 展示哪一个界面     */    private void showPages() {        switch (show_position) {            case SHOW_MSG_BODY:                ll_msgboy.removeAllViews();                ll_msgboy.addView(ar_showpages.get(show_position));                init_showmsgbody(ar_showpages.get(show_position));                break;            case SHOW_MSG_PAY:                break;            case SHOW_MSG_RESULT:                break;        }    }    /**     * 处理展示MSG的body的事件     */    @SuppressLint("ResourceType")    private void init_showmsgbody(final View _item) {        /**         * 设置地址的边框         */        _item.findViewById(R.id.act_topayshopAddrbody).setBackground(Utils.CreateDrawable(1,                "#ffffff", "#ffffff", 10));        /**         * 设置商品的信息         */        findViewById(R.id.act_topayshopMsgBody).setBackground(Utils.CreateDrawable(1, "#ffffff",                "#ffffff", 10));        /*设置点击下一步的按钮的样式*/        TextUnt.with(_item, R.id.assembly_item_topayshopBtnNext).setBackground(Utils                .CreateDrawable(1, getResources().getString(R.color.SystemTheme), getResources()                        .getString(R.color.SystemTheme), 10)).setTextColor("#ffffff");        /**         * 点击需要配置运费险的按钮         */        findViewById(R.id.assembly_item_topayshopBtnSelect).setOnClickListener(new View                .OnClickListener() {            @Override            public void onClick(View v) {                ImageView iv = (ImageView) v;                if (iv.getTag() == null) {                    iv.setTag(true);                    /*原始没有选择上*/                    iv.setImageDrawable(Utils.getSvgDrawable(getApplicationContext(), R.drawable                            .ico_select, getResources().getString(R.color.SystemTheme)));                } else {                    Boolean i = (Boolean) iv.getTag();                    if (i) {                        /*原始已经选择上了*/                        iv.setImageDrawable(Utils.getSvgDrawable(getApplicationContext(), R                                .drawable.ico_select, "#a9a9a9"));                        iv.setTag(false);                    } else {                        /*原始没有选择上*/                        iv.setTag(true);                        iv.setImageDrawable(Utils.getSvgDrawable(getApplicationContext(), R                                .drawable.ico_select, getResources().getString(R.color                                .SystemTheme)));                    }                }            }        });        /**         * 增加按钮点击         */        findViewById(R.id.assembly_item_topayshopBtnAdd).setOnClickListener(new View                .OnClickListener() {            @Override            public void onClick(View v) {                int number = Integer.valueOf(TextUnt.with(_item, R.id                        .assembly_item_topayshopNumber).getTexttoString().trim());                number++;                TextUnt.with(_item, R.id.assembly_item_topayshopNumber).setText(String.valueOf                        (number));            }        });        /**         * 减少按钮点击         */        findViewById(R.id.assembly_item_topayshopBtnDel).setOnClickListener(new View                .OnClickListener() {            @Override            public void onClick(View v) {                int number = Integer.valueOf(TextUnt.with(_item, R.id                        .assembly_item_topayshopNumber).getTexttoString().trim());                if (number <= 1) {                    Toast.makeText(getApplicationContext(), "最低的订购数量不能少于1", Toast.LENGTH_SHORT)                            .show();                } else {                    number--;                    TextUnt.with(_item, R.id.assembly_item_topayshopNumber).setText(String.valueOf                            (number));                }            }        });    }}