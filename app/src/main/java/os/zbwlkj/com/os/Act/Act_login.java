package os.zbwlkj.com.os.Act;import android.animation.AnimatorSet;import android.animation.ObjectAnimator;import android.animation.ValueAnimator;import android.annotation.SuppressLint;import android.content.Context;import android.content.Intent;import android.os.Bundle;import android.text.Editable;import android.text.TextWatcher;import android.view.View;import android.view.ViewGroup;import android.view.animation.BounceInterpolator;import android.widget.EditText;import android.widget.ImageView;import android.widget.LinearLayout;import android.widget.RelativeLayout;import android.widget.TextView;import android.widget.Toast;import com.bigkoo.convenientbanner.ConvenientBanner;import com.bigkoo.convenientbanner.holder.CBViewHolderCreator;import com.bigkoo.convenientbanner.holder.Holder;import com.bumptech.glide.Glide;import com.bumptech.glide.load.engine.DiskCacheStrategy;import java.util.ArrayList;import os.zbwlkj.com.os.Class.act_class;import os.zbwlkj.com.os.Class.action_class;import os.zbwlkj.com.os.R;import os.zbwlkj.com.os.Utils.TextUnt;import os.zbwlkj.com.os.Utils.Utils;/** * 登录界面 */public class Act_login extends act_class {    private RelativeLayout rl_inputbody;/*输入框的父窗口*//*    private RelativeLayout rl_inputwait;*/    private EditText et_code;/*输入验证码*/    private ConvenientBanner cb_login;/*登录的轮播背景*/    private EditText et_phone;    @Override    protected void onCreate(Bundle savedInstanceState) {        setTransparentBar();        setInTransition(action_class.TRANSITION.SLIDE);        setOutTransition(action_class.TRANSITION.SLIDE);        setContentView(R.layout.act_login);        rl_inputbody = findViewById(R.id.act_loginInputBody);/*        rl_inputwait = findViewById(R.id.act_loginInputWaitBody);*/        cb_login = findViewById(R.id.act_loginBanner);/*轮播*/        et_phone = findViewById(R.id.act_loginETphone);/*输入手机号码*/        et_code = findViewById(R.id.act_loginETcode);/*输入手机的验证码*/        init();        super.onCreate(savedInstanceState);    }    /**     * 系统初始化     */    @SuppressLint("ResourceType")    private void init() {        /**         * 设置登录按钮的样式         */        TextUnt.with(this, R.id.act_loginBtnlogin).setBackground(Utils.CreateDrawable(1,                getResources().getString(R.color.SystemTheme), getResources().getString(R.color                        .SystemTheme), 10));        /**         * 联网获取展示图片地址         */        ArrayList<String> img_url = new ArrayList();        img_url.add("http://120.79.63.36/OS_PHOTOS/123.png");        img_url.add("http://120.79.63.36/OS_PHOTOS/1234.png");        img_url.add("http://120.79.63.36/OS_PHOTOS/123.png");        img_url.add("http://120.79.63.36/OS_PHOTOS/1234.png");        /**         * 设置轮播设置         */        cb_login.setPages(new CBViewHolderCreator() {            @Override            public Loginhodler createHolder() {                return new Loginhodler();            }        }, img_url).setPageIndicatorAlign(ConvenientBanner.PageIndicatorAlign.ALIGN_PARENT_RIGHT)                .startTurning(3000);        /**         * 设置输入手机号码的点击事件         */        et_phone.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {            }        });        /**         * 设置输入手机号码的改变事件 判断是否到达11位数字         */        et_phone.addTextChangedListener(new TextWatcher() {            @Override            public void beforeTextChanged(CharSequence s, int start, int count, int after) {            }            @Override            public void onTextChanged(CharSequence s, int start, int before, int count) {            }            @Override            public void afterTextChanged(Editable s) {                if (s.length() >= 11) {                    Utils.hideKeyboard(et_phone);                    Utils.hideKeyboard(et_phone);                    Utils.getFocusable(et_code);                    Utils.saveToken(getApplicationContext(), action_class.SAVE_USER.ACCOUNT,                            "123087", action_class.SAVE_USER.TOEKN, "22343242");                    Intent i = new Intent();                    i.putExtra(action_class.SAVE_USER.STATUS, true);                    setResult(RESULT_OK,i);                    finish();                } else {                }            }        });        /*设置登录/等待 控件*/        handlerLogin();        listener();    }    /**     * 监听事件     */    private void listener() {        TextUnt.with(this, R.id.act_loginBtnlogin).setOnClick(new View.OnClickListener() {            @Override            public void onClick(View v) {                /**                 * 创建动画   处理登录                 */                TextView tv = (TextView) v;                AnimatorSet set = new AnimatorSet();                ValueAnimator valueAnimator = ValueAnimator.ofFloat(0, rl_inputbody                        .getMeasuredWidth());                valueAnimator.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {                    @Override                    public void onAnimationUpdate(ValueAnimator animation) {                        float value = (float) animation.getAnimatedValue();                        ViewGroup.MarginLayoutParams marginParams = (ViewGroup                                .MarginLayoutParams) rl_inputbody.getLayoutParams();                        marginParams.leftMargin = (int) value;                        marginParams.rightMargin = (int) value;                        rl_inputbody.setLayoutParams(marginParams);                    }                });                valueAnimator.setDuration(1000);                valueAnimator.setInterpolator(new BounceInterpolator());                valueAnimator.start();            }        });    }    /**     * 处理登录的边框     */    private void handlerLogin() {        getHeightPixels();/*获取屏幕的高度*/        ViewGroup.LayoutParams params = rl_inputbody.getLayoutParams();        params.height = getHeightPixels() / 3;        rl_inputbody.setLayoutParams(params);        rl_inputbody.setBackground(Utils.CreateDrawable(1, "#ffffff", "#ffffff", 20));/*        rl_inputwait.setLayoutParams(params);*//*        rl_inputwait.setBackground(Utils.CreateDrawable(1, "#ffffff", "#ffffff", 20));*/    }    class Loginhodler implements Holder<String> {        private ImageView img;        @Override        public View createView(Context context) {            img = new ImageView(context);            img.setAdjustViewBounds(true);            img.setScaleType(ImageView.ScaleType.FIT_XY);            return img;        }        @Override        public void UpdateUI(Context context, int position, String data) {            Glide.with(context).load(data).diskCacheStrategy(DiskCacheStrategy.NONE)                    .skipMemoryCache(false).into(img);        }    }}